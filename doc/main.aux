\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Network Training and Testing}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Quick Launch}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Supported Network Architectures}{3}}
\newlabel{nnarch}{{3}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Architectuer of the ConvNet12 network}}{4}}
\newlabel{convnet12}{{1}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Internal Architecture}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Workflow}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Workflow of the NATE training and testing procedure. At the first step the input JSON file is loaded with the class TaskSettingsCollection that creates a list of tasks consisting of objects TaskSettings. Next the necessary execution environment is initialized by generating necessary model, loss, data generators and other necessary objects using a number of factory classes. The execution is than handled to TaskLauncher class, that prepares specifies the environment for each stage of the task: training or testing. The immediated iteration through epochs and testing procedures are carried out then by CoreAlgorithm class.}}{5}}
\newlabel{fig:my_label}{{2}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Modules}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Module: network}{6}}
